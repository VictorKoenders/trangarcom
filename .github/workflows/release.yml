on:
    push:
        tags: '*'

name: Create Release

jobs:
    build:
        name: Create Release
        runs-on: ubuntu-latest
        steps:
            - name: Checkout code
              uses: actions/checkout@master
            - name: Install packages
              run: sudo apt-get install libpq-dev libssl-dev
            - name: Install latest nightly
              uses: actions-rs/toolchain@v1
              with:
                  toolchain: nightly
                  override: true
            - name: Build
              run: cargo build --release
            - name: Docker container
              run: docker build -t trangarcom . && docker save trangarcom --output trangarcom.tar

			- name: Create Release
			  id: create_release
			  uses: actions/create-release@v1.0.0
			  env:
				  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
				  with:
					  tag_name: ${{ github.ref }}
					  release_name: Release ${{ github.ref }}
					  draft: false
					  prerelease: false
			- name: Upload Release Asset
			  id: upload-release-asset 
			  uses: actions/upload-release-asset@v1.0.1
			  env:
				  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
				  with:
					  upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
					  asset_path: ./trangarcom.tar
					  asset_name: trangarcom.tar
					  asset_content_type: application/x-tar

